**********************************************************************
Linkage Mapper log file: Linkage Mapper 

Start time:	Thu Aug 27 10:30:02 2015 
Parameters:	['C:\\Dropbox\\LM_Lab_2015\\Secret\\LinkageMapper1_0_9\\toolbox\\scripts\\lm_master.py', 'C:\\Dropbox\\LM_Lab_2015\\Secret\\Results\\Project_2Cores', '2_Core_Areas', 'Core_ID', 'Resistance', 'true', 'true', 'Cost-Weighted & Euclidean', '#', 'true', 'true', 'false', '4', 'Cost-Weighted', 'true', 'true', '#', '#', '#'] 

********************************************************
Note: ArcGIS errors are more likely when writing to remote drives or deep file structures. We recommend shallow project directories on local drives, like C:\puma. Errors may also result from conflicts with anti-virus software (known problems with AVG). We have also seen conflicts when writing to synchronized folders like Dropbox.
 

Linkage Mapper Version 1.0.9
on ArcGIS Desktop 10.1 Service Pack 1
Setting data frame spatial reference to that of core area feature class.
 
---------------------------------
Starting at step 1.

Making temporary copy of resistance raster for this run.

Making temporary raster of core file for this run.
 
---------------------------------
Running script s1_getAdjacencies.py
Adjacency files will be written to C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\adj

Calculating cost-weighted distance adjacency
Starting cost-weighted distance allocation...
Processing cell size: 90

Building output statistics and pyramids for CWD raster.
Cost-weighted distance allocation done.
That took 29 seconds.

Calculating adjacencies crossing allocation boundaries...
That took 5 seconds.

---------------------------------
Calculating Euclidean adjacency
Starting Euclidean adjacency processing...

Euclidean distance allocation done.
That took 0 seconds.

Calculating adjacencies crossing allocation boundaries...
That took 3 seconds.

 
---------------------------------
Running script s2_buildNetwork.py
Simplifying polygons for core pair distance calculations

Finding distances between cores using Generate Near Table.
There are 1 adjacent core pairs to process.
That took 0 seconds.

Distance file C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\2_Core_Areas_dists.txt generated.

Core area distance list loaded.
number of pairwise distances = 1
 
---------------------------------
Removed 0 duplicate core pairs in Euclidean distance table.

After removing duplicates and distances that exceed maximum, 
there are 1 pairwise distances.  Max core ID number is 2.
Cost-weighted adjacency file loaded.
Creating link table

Keeping all adjacent links


Checking for corridors that are too long to map.
Writing C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s2.csv
There are 1 links in the table.
This includes 1 potential corridor links.
Creating shapefiles with linework for links.

Linework shapefiles written.
 
---------------------------------
Running script s3_calcCwds.py
---------------------------------
NOT using bounding circles in cost distance calculations.

Looking for C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s2.csv
There are 1 links in the table.
This includes 1 potential corridor links.

Number of core areas to connect: 2

Creating cost-weighted distance output folders
...cw

Checking for corridors that are too long to map.
Creating core area raster.

Starting cost distance calculations.

---------------------------------
Target core areas for core area #1 = [2]
Done with all calculations for core ID #1. 1 of 2 cores have been processed.
That took 25 seconds.

---------------------------------
Target core areas for core area #2 = [1]
Done with all calculations for core ID #2. 2 of 2 cores have been processed.
That took 15 seconds.

Updating C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s3.csv
Creating shapefiles with linework for links...
That took 2 seconds.


Individual cost-weighted distance layers written to "cwd" directory. 

C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s3.csv
 updated with cost-weighted distances between core areas.
 
---------------------------------
Running script s5_calcLccs.py

Looking for C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s4.csv

Looking for C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s3.csv
There are 1 links in the table.
This includes 1 potential corridor links.
Creating output folder: C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\nlcc

Normalized least-cost corridors will be written to C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\nlcc\nlc

Normalized and mosaicked corridor for link ID #1 connecting core areas 1 and 2 in 1.11 seconds. 1 out of 1 links have been processed.

Writing final LCP maps...
Updating C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\datapass\linkTable_s5.csv
Copy of final linkTable written to C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\output\Project_2Cores_linkTable_s5.csv
Creating shapefiles with linework for links.
---------------------------------
Results from this run can be found in your output directory:
C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\output
---------------------------------
A record of run settings and messages can be found in your log directory:
C:\Dropbox\LM_Lab_2015\Secret\Results\Project_2Cores\run_history\log
---------------------------------
 

Stop time:		Thu Aug 27 10:32:23 2015 


